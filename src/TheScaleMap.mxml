<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   minHeight="600"
					   creationComplete="onCreationComplete(event)">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			import vo.ChordType;
			import vo.MusicalKeyConstants;
			import vo.MusicalScale;

			[Bindable]
			private var currentKey:String = MusicalKeyConstants.KEY_C;
			
			[Bindable]
			private var useSharps:Boolean = true;
			
			[Bindable]
			private var scales:ArrayCollection;
			
			[Bindable]
			private var keys:ArrayCollection;

			[Bindable]
			private var chordTypes:ArrayCollection;

			
			private function onCreationComplete(event:FlexEvent=null):void {
				makeKeys();
				makeScales(currentKey, useSharps);
				generateChordTypes();
			}
			
			private function generateChordTypes():void {
				chordTypes = new ArrayCollection([
					new ChordType("Major", 			[1,0,0,0,1,0,0,1,0,0,0,0]),
					new ChordType("Minor", 			[1,0,0,1,0,0,0,1,0,0,0,0]),
					new ChordType("Diminished", 	[1,0,0,1,0,0,1,0,0,0,0,0]),
					new ChordType("Augmented", 		[1,0,0,0,1,0,0,0,1,0,0,0]),
					new ChordType("Major 6", 		[1,0,0,0,1,0,0,1,0,1,0,0]),
					new ChordType("Minor 6", 		[1,0,0,1,0,0,0,1,0,1,0,0]),
					new ChordType("Major 7", 		[1,0,0,0,1,0,0,1,0,0,0,1]),
					new ChordType("Minor 7", 		[1,0,0,1,0,0,0,1,0,0,1,0]),
					new ChordType("Dominant 7", 	[1,0,0,0,1,0,0,1,0,0,1,0]),
					new ChordType("Minor 7 b5", 	[1,0,0,1,0,0,1,0,0,0,1,0]),
					new ChordType("Suspended 2", 	[1,0,1,0,0,0,0,1,0,0,0,0]),
					new ChordType("Suspended 4", 	[1,0,0,0,0,1,0,1,0,0,0,0]),
					new ChordType("Major Add 9", 	[1,0,1,0,1,0,0,1,0,0,0,0]),
					new ChordType("Minor Add 9", 	[1,0,1,1,0,0,0,1,0,0,0,0]),
					new ChordType("Major 9", 		[1,0,1,0,1,0,0,1,0,0,0,1]),
					new ChordType("Minor 9", 		[1,0,1,1,0,0,0,1,0,0,1,0]),
					new ChordType("Dominant 9", 	[1,0,1,0,1,0,0,1,0,0,1,0]),
					new ChordType("Major 9 #11", 	[1,0,1,0,1,0,1,1,0,0,0,1]),
					new ChordType("Minor 11", 		[1,0,1,1,0,1,0,1,0,0,1,0]),
					new ChordType("Dominant 9 #11", [1,0,1,0,1,0,1,1,0,0,1,0])
				]);
			}
			
			private function makeScales(key:String, withSharps:Boolean):void {
				//scales = new ArrayCollection();
				var tempScales:ArrayCollection = new ArrayCollection();
				tempScales.addItem(new MusicalScale("Major", [1,0,1,0,1,1,0,1,0,1,0,1], key, withSharps));
				tempScales.addItem(new MusicalScale("Minor", [1,0,1,1,0,1,0,1,1,0,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Harmonic Minor", [1,0,1,1,0,1,0,1,1,0,0,1], key, withSharps));
				tempScales.addItem(new MusicalScale("Melodic Minor", [1,0,1,1,0,1,0,1,0,1,0,1], key, withSharps));
				tempScales.addItem(new MusicalScale("Diminished", [1,0,1,1,0,1,1,0,1,1,0,1], key, withSharps));
				tempScales.addItem(new MusicalScale("Major Pentatonic", [1,0,1,0,1,0,0,1,0,1,0,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Minor Pentatonic", [1,0,0,1,0,1,0,1,0,0,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Blues", [1,0,0,1,0,1,1,1,0,0,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Chromatic", [1,1,1,1,1,1,1,1,1,1,1,1], key, withSharps));
				tempScales.addItem(new MusicalScale("whole tone", [1,0,1,0,1,0,1,0,1,0,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Ionian mode", [1,0,1,0,1,0,1,0,1,0,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Dorian mode", [1,0,1,1,0,1,0,1,0,1,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Phrygian mode", [1,1,0,1,0,1,0,1,1,0,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Lydian mode", [1,0,1,0,1,0,1,1,0,1,0,1], key, withSharps));
				tempScales.addItem(new MusicalScale("Mixolydian mode", [1,0,1,0,1,1,0,1,0,1,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Aeolian mode", [1,0,1,1,0,1,0,1,1,0,1,0], key, withSharps));
				tempScales.addItem(new MusicalScale("Locrian mode", [1,1,0,1,0,1,1,0,1,0,1,0], key, withSharps));
				if (!scales) {
					scales = new ArrayCollection();
				} else {
					scales.removeAll();
				}
				scales.addAll(tempScales);
			}
			
			private function makeKeys():void {
				keys = new ArrayCollection();
				keys.addItem(MusicalKeyConstants.KEY_C);
				keys.addItem(MusicalKeyConstants.KEY_C_SHARP);
				keys.addItem(MusicalKeyConstants.KEY_D);
				keys.addItem(MusicalKeyConstants.KEY_D_SHARP);
				keys.addItem(MusicalKeyConstants.KEY_E);
				keys.addItem(MusicalKeyConstants.KEY_F);
				keys.addItem(MusicalKeyConstants.KEY_F_SHARP);
				keys.addItem(MusicalKeyConstants.KEY_G);
				keys.addItem(MusicalKeyConstants.KEY_G_SHARP);
				keys.addItem(MusicalKeyConstants.KEY_A);
				keys.addItem(MusicalKeyConstants.KEY_A_SHARP);
				keys.addItem(MusicalKeyConstants.KEY_B);	
			}
			
			private function labelGetter (item:Object, gc:GridColumn):String {
				return item[gc.dataField] == true ? "x" : "";
			}
			
			protected function onSelectedKeyChange(event:IndexChangeEvent):void {
				currentKey = event.target.selectedItem;
				makeScales(currentKey, useSharps);
			}
			
			protected function onUseSharpsChanged(event:Event):void {
				this.useSharps = event.target.selected;
				makeScales(currentKey, useSharps);
			}
			
		]]>
	</fx:Script>

	<s:VGroup id="vgLists" left="7" top="7">
		<s:Label id="lblKey" text="Select a key" />
		<s:List id="lstKeys" dataProvider="{keys}" selectedItem="@{currentKey}" change="onSelectedKeyChange(event)" />
		<s:Label id="lblChordTypes" text="Select a chord type" />
		<s:List id="lstChordTypes" dataProvider="{chordTypes}" labelField="name"/>
	</s:VGroup>
	
	<s:VGroup top="7" left="{vgLists.width + vgLists.y + 7}" right="7">
		<s:CheckBox id="cbUseSharps" label="use sharps" selected="{useSharps}" change="onUseSharpsChanged(event)" />
		<s:DataGrid id="dgScales" dataProvider="{scales}" height="{dgScales.rowHeight * (scales.length + 1)}">
			<s:typicalItem>
				<s:DataItem 
					scaleName="Major Pentatonic"
					noteName_01_1="Root" 
					noteName_02_2="C#" 
					noteName_03_2="C#" 
					noteName_04_b3="C#" 
					noteName_05_3="C#" 
					noteName_06_4="C#" 
					noteName_07_b5="C#" 
					noteName_08_5="C#" 
					noteName_09_b6="C#" 
					noteName_10_6="C#" 
					noteName_11_b7="C#" 
					noteName_12_7="C#" 
					/>
			</s:typicalItem>
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="scaleName" headerText="Scale"/>
					<s:GridColumn dataField="noteName_01_1" headerText="Root"  />
					<s:GridColumn dataField="noteName_02_b2" headerText="b2"  />
					<s:GridColumn dataField="noteName_03_2" headerText="2"  />
					<s:GridColumn dataField="noteName_04_b3" headerText="b3"  />
					<s:GridColumn dataField="noteName_05_3" headerText="3"  />
					<s:GridColumn dataField="noteName_06_4" headerText="4"  />
					<s:GridColumn dataField="noteName_07_b5" headerText="b5"  />
					<s:GridColumn dataField="noteName_08_5" headerText="5"  />
					<s:GridColumn dataField="noteName_09_b6" headerText="b6"  />
					<s:GridColumn dataField="noteName_10_6" headerText="6"  />
					<s:GridColumn dataField="noteName_11_b7" headerText="b7"  />
					<s:GridColumn dataField="noteName_12_7" headerText="7"  />
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
	</s:VGroup>

</s:WindowedApplication>
